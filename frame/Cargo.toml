[package]
name = "pallet-all"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
pallet-assets = { version = "4.0.0-dev", path = "assets" }
pallet-atomic-swap = { version = "4.0.0-dev", path = "atomic-swap" }
pallet-aura = { version = "4.0.0-dev", path = "aura" }
pallet-authority-discovery = { version = "4.0.0-dev", path = "authority-discovery" }
pallet-authorship = { version = "4.0.0-dev", path = "authorship" }
pallet-babe = { version = "4.0.0-dev", path = "babe" }
pallet-balances = { version = "4.0.0-dev", path = "balances" }
frame-benchmarking = { version = "4.0.0-dev", path = "benchmarking" }
pallet-bounties = { version = "4.0.0-dev", path = "bounties" }
pallet-collective = { version = "4.0.0-dev", path = "collective" }
pallet-contracts = { version = "4.0.0-dev", path = "contracts" }
pallet-contracts-rpc = { version = "4.0.0-dev", path = "contracts/rpc" }
pallet-contracts-rpc-runtime-api = { version = "4.0.0-dev", path = "contracts/rpc/runtime-api" }
pallet-democracy = { version = "4.0.0-dev", path = "democracy" }
frame-try-runtime = { version = "0.10.0-dev", path = "try-runtime" }
pallet-elections = { version = "4.0.0-dev", path = "elections" }
pallet-election-provider-multi-phase = { version = "4.0.0-dev", path = "election-provider-multi-phase" }
frame-election-provider-support = { version = "4.0.0-dev", path = "election-provider-support" }
pallet-example = { version = "4.0.0-dev", path = "example" }
pallet-example-offchain-worker = { version = "3.0.0-dev", path = "example-offchain-worker" }
pallet-example-parallel = { version = "3.0.0-dev", path = "example-parallel" }
frame-executive = { version = "4.0.0-dev", path = "executive" }
pallet-gilt = { version = "4.0.0-dev", path = "gilt" }
pallet-grandpa = { version = "4.0.0-dev", path = "grandpa" }
pallet-identity = { version = "4.0.0-dev", path = "identity" }
pallet-im-online = { version = "4.0.0-dev", path = "im-online" }
pallet-indices = { version = "4.0.0-dev", path = "indices" }
pallet-lottery = { version = "4.0.0-dev", path = "lottery" }
pallet-membership = { version = "4.0.0-dev", path = "membership" }
pallet-mmr = { version = "4.0.0-dev", path = "merkle-mountain-range" }
pallet-mmr-primitives = { version = "4.0.0-dev", path = "merkle-mountain-range/primitives" }
pallet-mmr-rpc = { version = "3.0.0", path = "merkle-mountain-range/rpc" }
frame-metadata = { version = "14.0.0-dev", path = "metadata" }
pallet-multisig = { version = "4.0.0-dev", path = "multisig" }
pallet-nicks = { version = "4.0.0-dev", path = "nicks" }
pallet-node-authorization = { version = "4.0.0-dev", path = "node-authorization" }
pallet-offences = { version = "4.0.0-dev", path = "offences" }
pallet-proxy = { version = "4.0.0-dev", path = "proxy" }
pallet-randomness-collective-flip = { version = "4.0.0-dev", path = "randomness-collective-flip" }
pallet-recovery = { version = "4.0.0-dev", path = "recovery" }
pallet-scheduler = { version = "4.0.0-dev", path = "scheduler" }
pallet-scored-pool = { version = "4.0.0-dev", path = "scored-pool" }
pallet-session = { version = "4.0.0-dev", path = "session" }
pallet-society = { version = "4.0.0-dev", path = "society" }
pallet-staking = { version = "4.0.0-dev", path = "staking" }
pallet-staking-reward-curve = { version = "4.0.0-dev", path = "staking/reward-curve" }
pallet-staking-reward-fn = { version = "4.0.0-dev", path = "staking/reward-fn" }
pallet-sudo = { version = "4.0.0-dev", path = "sudo" }
frame-support = { version = "4.0.0-dev", path = "support" }
frame-support-procedural = { version = "4.0.0-dev", path = "support/procedural" }
frame-support-procedural-tools = { version = "4.0.0-dev", path = "support/procedural/tools", optional = true }
frame-support-procedural-tools-derive = { version = "3.0.0", path = "support/procedural/tools/derive" }
frame-support-test = { version = "3.0.0", path = "support/test", optional = true }
frame-system = { version = "4.0.0-dev", path = "system" }
frame-system-benchmarking = { version = "4.0.0-dev", path = "system/benchmarking" }
frame-system-rpc-runtime-api = { version = "4.0.0-dev", path = "system/rpc/runtime-api" }
pallet-timestamp = { version = "4.0.0-dev", path = "timestamp" }
pallet-transaction-payment = { version = "4.0.0-dev", path = "transaction-payment" }
pallet-transaction-payment-rpc = { version = "4.0.0-dev", path = "transaction-payment/rpc" }
pallet-transaction-payment-rpc-runtime-api = { version = "4.0.0-dev", path = "transaction-payment/rpc/runtime-api" }
pallet-transaction-storage = { version = "4.0.0-dev", path = "transaction-storage" }
pallet-treasury = { version = "4.0.0-dev", path = "treasury" }
pallet-tips = { version = "4.0.0-dev", path = "tips" }
pallet-uniques = { version = "4.0.0-dev", path = "uniques" }
pallet-utility = { version = "4.0.0-dev", path = "utility" }
pallet-vesting = { version = "4.0.0-dev", path = "vesting" }

# We enable it only for web-wasm check
# See https://docs.rs/getrandom/0.2.1/getrandom/#webassembly-support
getrandom = { version = "0.2", features = ["js"] }

# Daisy-chain including all the primitives:
sp-all = { path = "../primitives" }

[features]
default = ["std"]
std = ["frame-support-procedural-tools", "frame-support-test/std"]
